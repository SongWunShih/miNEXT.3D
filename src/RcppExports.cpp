// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FD_h_fn
double FD_h_fn(int m1, int m2, int n1, int n2, int k1, int k2, double vi, double ai1, double ai2);
RcppExport SEXP _miNEXT_3D_FD_h_fn(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP viSEXP, SEXP ai1SEXP, SEXP ai2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< int >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< int >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type vi(viSEXP);
    Rcpp::traits::input_parameter< double >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< double >::type ai2(ai2SEXP);
    rcpp_result_gen = Rcpp::wrap(FD_h_fn(m1, m2, n1, n2, k1, k2, vi, ai1, ai2));
    return rcpp_result_gen;
END_RCPP
}
// FD_h_fn_all
double FD_h_fn_all(double m1, double m2, double n1, double n2, double vi, double ai1, double ai2, double q);
RcppExport SEXP _miNEXT_3D_FD_h_fn_all(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP viSEXP, SEXP ai1SEXP, SEXP ai2SEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type vi(viSEXP);
    Rcpp::traits::input_parameter< double >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< double >::type ai2(ai2SEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(FD_h_fn_all(m1, m2, n1, n2, vi, ai1, ai2, q));
    return rcpp_result_gen;
END_RCPP
}
// FD_h_hat_fn
double FD_h_hat_fn(int m1, int m2, int n1, int n2, NumericVector vi, NumericVector ai1, NumericVector ai2, double q, int S);
RcppExport SEXP _miNEXT_3D_FD_h_hat_fn(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP viSEXP, SEXP ai1SEXP, SEXP ai2SEXP, SEXP qSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vi(viSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ai2(ai2SEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(FD_h_hat_fn(m1, m2, n1, n2, vi, ai1, ai2, q, S));
    return rcpp_result_gen;
END_RCPP
}
// PD_g_fn
double PD_g_fn(int m1, int m2, int n1, int n2, int k1, int k2, double Li, double ai1, double ai2);
RcppExport SEXP _miNEXT_3D_PD_g_fn(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP LiSEXP, SEXP ai1SEXP, SEXP ai2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< int >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< int >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< double >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< double >::type ai2(ai2SEXP);
    rcpp_result_gen = Rcpp::wrap(PD_g_fn(m1, m2, n1, n2, k1, k2, Li, ai1, ai2));
    return rcpp_result_gen;
END_RCPP
}
// PD_g_fn_all
double PD_g_fn_all(double m1, double m2, double n1, double n2, double Li, double ai1, double ai2, double q, double Tbar);
RcppExport SEXP _miNEXT_3D_PD_g_fn_all(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP LiSEXP, SEXP ai1SEXP, SEXP ai2SEXP, SEXP qSEXP, SEXP TbarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< double >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< double >::type ai2(ai2SEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type Tbar(TbarSEXP);
    rcpp_result_gen = Rcpp::wrap(PD_g_fn_all(m1, m2, n1, n2, Li, ai1, ai2, q, Tbar));
    return rcpp_result_gen;
END_RCPP
}
// PD_g_hat_fn
double PD_g_hat_fn(int m1, int m2, int n1, int n2, NumericVector Li, NumericVector ai1, NumericVector ai2, double q, int S, double Tbar);
RcppExport SEXP _miNEXT_3D_PD_g_hat_fn(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP LiSEXP, SEXP ai1SEXP, SEXP ai2SEXP, SEXP qSEXP, SEXP SSEXP, SEXP TbarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ai2(ai2SEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type Tbar(TbarSEXP);
    rcpp_result_gen = Rcpp::wrap(PD_g_hat_fn(m1, m2, n1, n2, Li, ai1, ai2, q, S, Tbar));
    return rcpp_result_gen;
END_RCPP
}
// TD_f_fn
double TD_f_fn(int m1, int m2, int n1, int n2, int k1, int k2, double ai1, double ai2);
RcppExport SEXP _miNEXT_3D_TD_f_fn(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP ai1SEXP, SEXP ai2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< int >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< int >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< double >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< double >::type ai2(ai2SEXP);
    rcpp_result_gen = Rcpp::wrap(TD_f_fn(m1, m2, n1, n2, k1, k2, ai1, ai2));
    return rcpp_result_gen;
END_RCPP
}
// TD_f_fn_all
double TD_f_fn_all(double m1, double m2, double n1, double n2, double ai1, double ai2, double q);
RcppExport SEXP _miNEXT_3D_TD_f_fn_all(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP ai1SEXP, SEXP ai2SEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< double >::type ai2(ai2SEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(TD_f_fn_all(m1, m2, n1, n2, ai1, ai2, q));
    return rcpp_result_gen;
END_RCPP
}
// TD_f_hat_fn
double TD_f_hat_fn(int m1, int m2, int n1, int n2, NumericVector ai1, NumericVector ai2, double q, int S);
RcppExport SEXP _miNEXT_3D_TD_f_hat_fn(SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP ai1SEXP, SEXP ai2SEXP, SEXP qSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ai1(ai1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ai2(ai2SEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(TD_f_hat_fn(m1, m2, n1, n2, ai1, ai2, q, S));
    return rcpp_result_gen;
END_RCPP
}
// h0_cpp
double h0_cpp(double pi1, double pi2, int m1, int m2s, int n2);
RcppExport SEXP _miNEXT_3D_h0_cpp(SEXP pi1SEXP, SEXP pi2SEXP, SEXP m1SEXP, SEXP m2sSEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2s(m2sSEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h0_cpp(pi1, pi2, m1, m2s, n2));
    return rcpp_result_gen;
END_RCPP
}
// h0_cpp_PD
double h0_cpp_PD(double pi1, double pi2, double Li, int m1, int m2s, int n2);
RcppExport SEXP _miNEXT_3D_h0_cpp_PD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP LiSEXP, SEXP m1SEXP, SEXP m2sSEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2s(m2sSEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h0_cpp_PD(pi1, pi2, Li, m1, m2s, n2));
    return rcpp_result_gen;
END_RCPP
}
// h0_cpp_FD
double h0_cpp_FD(double pi1, double pi2, double vi, int m1, int m2s, int n2);
RcppExport SEXP _miNEXT_3D_h0_cpp_FD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP viSEXP, SEXP m1SEXP, SEXP m2sSEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type vi(viSEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2s(m2sSEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h0_cpp_FD(pi1, pi2, vi, m1, m2s, n2));
    return rcpp_result_gen;
END_RCPP
}
// h0_hat_cpp
double h0_hat_cpp(NumericVector pi1, NumericVector pi2, int m1, int m2s, int n1, int n2);
RcppExport SEXP _miNEXT_3D_h0_hat_cpp(SEXP pi1SEXP, SEXP pi2SEXP, SEXP m1SEXP, SEXP m2sSEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2s(m2sSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h0_hat_cpp(pi1, pi2, m1, m2s, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// h0_hat_cpp_PD
double h0_hat_cpp_PD(NumericVector pi1, NumericVector pi2, NumericVector Li_v, int m1, int m2s, int n1, int n2);
RcppExport SEXP _miNEXT_3D_h0_hat_cpp_PD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP Li_vSEXP, SEXP m1SEXP, SEXP m2sSEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Li_v(Li_vSEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2s(m2sSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h0_hat_cpp_PD(pi1, pi2, Li_v, m1, m2s, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// h0_hat_cpp_FD
double h0_hat_cpp_FD(NumericVector pi1, NumericVector pi2, NumericVector vi_v, int m1, int m2s, int n1, int n2);
RcppExport SEXP _miNEXT_3D_h0_hat_cpp_FD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP vi_vSEXP, SEXP m1SEXP, SEXP m2sSEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vi_v(vi_vSEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2s(m2sSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h0_hat_cpp_FD(pi1, pi2, vi_v, m1, m2s, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// TD_theo
double TD_theo(double pi1, double pi2, int m1, int m2, int k1, int k2);
RcppExport SEXP _miNEXT_3D_TD_theo(SEXP pi1SEXP, SEXP pi2SEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP k1SEXP, SEXP k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< int >::type k2(k2SEXP);
    rcpp_result_gen = Rcpp::wrap(TD_theo(pi1, pi2, m1, m2, k1, k2));
    return rcpp_result_gen;
END_RCPP
}
// PD_theo
double PD_theo(double pi1, double pi2, double Li, int m1, int m2, int k1, int k2);
RcppExport SEXP _miNEXT_3D_PD_theo(SEXP pi1SEXP, SEXP pi2SEXP, SEXP LiSEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP k1SEXP, SEXP k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< int >::type k2(k2SEXP);
    rcpp_result_gen = Rcpp::wrap(PD_theo(pi1, pi2, Li, m1, m2, k1, k2));
    return rcpp_result_gen;
END_RCPP
}
// FD_theo
double FD_theo(double pi1, double pi2, double vi, int m1, int m2, int k1, int k2);
RcppExport SEXP _miNEXT_3D_FD_theo(SEXP pi1SEXP, SEXP pi2SEXP, SEXP viSEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP k1SEXP, SEXP k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type vi(viSEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< int >::type k2(k2SEXP);
    rcpp_result_gen = Rcpp::wrap(FD_theo(pi1, pi2, vi, m1, m2, k1, k2));
    return rcpp_result_gen;
END_RCPP
}
// h1
double h1(double pi1, double pi2, double m1, double m2, double n1, double n2);
RcppExport SEXP _miNEXT_3D_h1(SEXP pi1SEXP, SEXP pi2SEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1(pi1, pi2, m1, m2, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_assem2
double h1_assem2(double pi2, double m2, double n2);
RcppExport SEXP _miNEXT_3D_h1_assem2(SEXP pi2SEXP, SEXP m2SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_assem2(pi2, m2, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_hat
double h1_hat(NumericVector pi1, NumericVector pi2, NumericVector xi1, NumericVector xi2, int m1, int m2, int n1, int n2);
RcppExport SEXP _miNEXT_3D_h1_hat(SEXP pi1SEXP, SEXP pi2SEXP, SEXP xi1SEXP, SEXP xi2SEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_hat(pi1, pi2, xi1, xi2, m1, m2, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_PD
double h1_PD(double pi1, double pi2, double Li, double Tbar, double m1, double m2, double n1, double n2);
RcppExport SEXP _miNEXT_3D_h1_PD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP LiSEXP, SEXP TbarSEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< double >::type Tbar(TbarSEXP);
    Rcpp::traits::input_parameter< double >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_PD(pi1, pi2, Li, Tbar, m1, m2, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_assem2_PD
double h1_assem2_PD(double pi2, double Li, double Tbar, double m2, double n2);
RcppExport SEXP _miNEXT_3D_h1_assem2_PD(SEXP pi2SEXP, SEXP LiSEXP, SEXP TbarSEXP, SEXP m2SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< double >::type Tbar(TbarSEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_assem2_PD(pi2, Li, Tbar, m2, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_hat_PD
double h1_hat_PD(NumericVector pi1, NumericVector pi2, NumericVector Li_v, double Tbar, NumericVector xi1, NumericVector xi2, int m1, int m2, int n1, int n2);
RcppExport SEXP _miNEXT_3D_h1_hat_PD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP Li_vSEXP, SEXP TbarSEXP, SEXP xi1SEXP, SEXP xi2SEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Li_v(Li_vSEXP);
    Rcpp::traits::input_parameter< double >::type Tbar(TbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_hat_PD(pi1, pi2, Li_v, Tbar, xi1, xi2, m1, m2, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_FD
double h1_FD(double pi1, double pi2, double vi, double m1, double m2, double n1, double n2);
RcppExport SEXP _miNEXT_3D_h1_FD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP viSEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type vi(viSEXP);
    Rcpp::traits::input_parameter< double >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_FD(pi1, pi2, vi, m1, m2, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_assem2_FD
double h1_assem2_FD(double pi2, double vi, double m2, double n2);
RcppExport SEXP _miNEXT_3D_h1_assem2_FD(SEXP pi2SEXP, SEXP viSEXP, SEXP m2SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< double >::type vi(viSEXP);
    Rcpp::traits::input_parameter< double >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_assem2_FD(pi2, vi, m2, n2));
    return rcpp_result_gen;
END_RCPP
}
// h1_hat_FD
double h1_hat_FD(NumericVector pi1, NumericVector pi2, NumericVector vi_v, NumericVector xi1, NumericVector xi2, int m1, int m2, int n1, int n2);
RcppExport SEXP _miNEXT_3D_h1_hat_FD(SEXP pi1SEXP, SEXP pi2SEXP, SEXP vi_vSEXP, SEXP xi1SEXP, SEXP xi2SEXP, SEXP m1SEXP, SEXP m2SEXP, SEXP n1SEXP, SEXP n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vi_v(vi_vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    rcpp_result_gen = Rcpp::wrap(h1_hat_FD(pi1, pi2, vi_v, xi1, xi2, m1, m2, n1, n2));
    return rcpp_result_gen;
END_RCPP
}
// un_abun
NumericVector un_abun(NumericVector xi, int n, int m);
RcppExport SEXP _miNEXT_3D_un_abun(SEXP xiSEXP, SEXP nSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(un_abun(xi, n, m));
    return rcpp_result_gen;
END_RCPP
}
// sh_abun
NumericVector sh_abun(NumericVector xi1, NumericVector xi2, int n1, int m1, int n2, int m2);
RcppExport SEXP _miNEXT_3D_sh_abun(SEXP xi1SEXP, SEXP xi2SEXP, SEXP n1SEXP, SEXP m1SEXP, SEXP n2SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(sh_abun(xi1, xi2, n1, m1, n2, m2));
    return rcpp_result_gen;
END_RCPP
}
// un_abun_PD
NumericVector un_abun_PD(NumericVector Li, NumericVector xi, int n, int m);
RcppExport SEXP _miNEXT_3D_un_abun_PD(SEXP LiSEXP, SEXP xiSEXP, SEXP nSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(un_abun_PD(Li, xi, n, m));
    return rcpp_result_gen;
END_RCPP
}
// sh_abun_PD
NumericVector sh_abun_PD(NumericVector Li, NumericVector xi1, NumericVector xi2, int n1, int m1, int n2, int m2);
RcppExport SEXP _miNEXT_3D_sh_abun_PD(SEXP LiSEXP, SEXP xi1SEXP, SEXP xi2SEXP, SEXP n1SEXP, SEXP m1SEXP, SEXP n2SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Li(LiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(sh_abun_PD(Li, xi1, xi2, n1, m1, n2, m2));
    return rcpp_result_gen;
END_RCPP
}
// sh_abun_FD
NumericVector sh_abun_FD(NumericVector vi, NumericVector xi1, NumericVector xi2, int n1, int m1, int n2, int m2);
RcppExport SEXP _miNEXT_3D_sh_abun_FD(SEXP viSEXP, SEXP xi1SEXP, SEXP xi2SEXP, SEXP n1SEXP, SEXP m1SEXP, SEXP n2SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vi(viSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi2(xi2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< int >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(sh_abun_FD(vi, xi1, xi2, n1, m1, n2, m2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_miNEXT_3D_FD_h_fn", (DL_FUNC) &_miNEXT_3D_FD_h_fn, 9},
    {"_miNEXT_3D_FD_h_fn_all", (DL_FUNC) &_miNEXT_3D_FD_h_fn_all, 8},
    {"_miNEXT_3D_FD_h_hat_fn", (DL_FUNC) &_miNEXT_3D_FD_h_hat_fn, 9},
    {"_miNEXT_3D_PD_g_fn", (DL_FUNC) &_miNEXT_3D_PD_g_fn, 9},
    {"_miNEXT_3D_PD_g_fn_all", (DL_FUNC) &_miNEXT_3D_PD_g_fn_all, 9},
    {"_miNEXT_3D_PD_g_hat_fn", (DL_FUNC) &_miNEXT_3D_PD_g_hat_fn, 10},
    {"_miNEXT_3D_TD_f_fn", (DL_FUNC) &_miNEXT_3D_TD_f_fn, 8},
    {"_miNEXT_3D_TD_f_fn_all", (DL_FUNC) &_miNEXT_3D_TD_f_fn_all, 7},
    {"_miNEXT_3D_TD_f_hat_fn", (DL_FUNC) &_miNEXT_3D_TD_f_hat_fn, 8},
    {"_miNEXT_3D_h0_cpp", (DL_FUNC) &_miNEXT_3D_h0_cpp, 5},
    {"_miNEXT_3D_h0_cpp_PD", (DL_FUNC) &_miNEXT_3D_h0_cpp_PD, 6},
    {"_miNEXT_3D_h0_cpp_FD", (DL_FUNC) &_miNEXT_3D_h0_cpp_FD, 6},
    {"_miNEXT_3D_h0_hat_cpp", (DL_FUNC) &_miNEXT_3D_h0_hat_cpp, 6},
    {"_miNEXT_3D_h0_hat_cpp_PD", (DL_FUNC) &_miNEXT_3D_h0_hat_cpp_PD, 7},
    {"_miNEXT_3D_h0_hat_cpp_FD", (DL_FUNC) &_miNEXT_3D_h0_hat_cpp_FD, 7},
    {"_miNEXT_3D_TD_theo", (DL_FUNC) &_miNEXT_3D_TD_theo, 6},
    {"_miNEXT_3D_PD_theo", (DL_FUNC) &_miNEXT_3D_PD_theo, 7},
    {"_miNEXT_3D_FD_theo", (DL_FUNC) &_miNEXT_3D_FD_theo, 7},
    {"_miNEXT_3D_h1", (DL_FUNC) &_miNEXT_3D_h1, 6},
    {"_miNEXT_3D_h1_assem2", (DL_FUNC) &_miNEXT_3D_h1_assem2, 3},
    {"_miNEXT_3D_h1_hat", (DL_FUNC) &_miNEXT_3D_h1_hat, 8},
    {"_miNEXT_3D_h1_PD", (DL_FUNC) &_miNEXT_3D_h1_PD, 8},
    {"_miNEXT_3D_h1_assem2_PD", (DL_FUNC) &_miNEXT_3D_h1_assem2_PD, 5},
    {"_miNEXT_3D_h1_hat_PD", (DL_FUNC) &_miNEXT_3D_h1_hat_PD, 10},
    {"_miNEXT_3D_h1_FD", (DL_FUNC) &_miNEXT_3D_h1_FD, 7},
    {"_miNEXT_3D_h1_assem2_FD", (DL_FUNC) &_miNEXT_3D_h1_assem2_FD, 4},
    {"_miNEXT_3D_h1_hat_FD", (DL_FUNC) &_miNEXT_3D_h1_hat_FD, 9},
    {"_miNEXT_3D_un_abun", (DL_FUNC) &_miNEXT_3D_un_abun, 3},
    {"_miNEXT_3D_sh_abun", (DL_FUNC) &_miNEXT_3D_sh_abun, 6},
    {"_miNEXT_3D_un_abun_PD", (DL_FUNC) &_miNEXT_3D_un_abun_PD, 4},
    {"_miNEXT_3D_sh_abun_PD", (DL_FUNC) &_miNEXT_3D_sh_abun_PD, 7},
    {"_miNEXT_3D_sh_abun_FD", (DL_FUNC) &_miNEXT_3D_sh_abun_FD, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_miNEXT_3D(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
